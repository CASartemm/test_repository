module matrix_processor_axis_0_tb;

    // Сигналы для AXI-Stream интерфейса
    reg clk;
    reg reset;
    reg [639:0] s_axis_tdata;
    reg s_axis_tvalid;
    wire s_axis_tready;
    reg s_axis_tlast;
    wire [127:0] m_axis_tdata;
    wire m_axis_tvalid;
    reg m_axis_tready;
    wire m_axis_tlast;

    // Переменные для работы с файлами
    integer input_file;
    integer output_file;
    reg [639:0] temp_mem;
 // Инстанцирование IP-ядра
 // Инстанцирование IP-ядра
 // Инстанцирование IP-ядра
    // Инстанцирование IP-ядра
    matrix_processor_axis_0 dut (
        .clk(clk),
        .reset(reset),
        .s_axis_tdata(s_axis_tdata),
        .s_axis_tvalid(s_axis_tvalid),
        .s_axis_tready(s_axis_tready),
        .s_axis_tlast(s_axis_tlast),
        .m_axis_tdata(m_axis_tdata),
        .m_axis_tvalid(m_axis_tvalid),
        .m_axis_tready(m_axis_tready),
        .m_axis_tlast(m_axis_tlast)
    );

    // Генерация тактового сигнала
    initial begin
        clk = 0;
        forever #5 clk = ~clk;  // 100 МГц тактовый сигнал
    end

    // Основная последовательность тестирования
    initial begin
        // Инициализация сигналов
        reset = 1;
        s_axis_tvalid = 0;
        s_axis_tlast = 0;
        m_axis_tready = 1;  // Тестбенч всегда готов принимать выходные данные
        s_axis_tdata = 640'b0;

        // Загрузка входного вектора из файла
        input_file = $fopen("input_vector.txt", "r");
        if (input_file) begin
            $fscanf(input_file, "%b", temp_mem);
            $fclose(input_file);
            s_axis_tdata = temp_mem;
            $display("[%0t] The input vector is loaded: %h", $time, s_axis_tdata);
        end else begin
            $display("Error when opening input_vector.txt!");
            $finish;
        end

        // Применение сброса
        #10;
        reset = 0;

        // Ожидание готовности модуля к приему данных
        wait(s_axis_tready);

        // Отправка входного вектора
        @(negedge clk);
        s_axis_tvalid = 1;
        s_axis_tlast = 1;  // Это единственная передача

        // Ожидание принятия данных модулем
        wait(~s_axis_tready);
        @(negedge clk);
        s_axis_tvalid = 0;
        s_axis_tlast = 0;
    end

    // Захват и запись результата
    initial begin
        wait(m_axis_tvalid && m_axis_tready);
        @(negedge clk);
        output_file = $fopen("output_vector.txt", "w");
        if (output_file) begin
            $fwrite(output_file, "%b", m_axis_tdata);
            $fclose(output_file);
            $display("[%0t] Output result: %h", $time, m_axis_tdata);
        end else begin
            $display("Error when opening output_vector.txt!");
        end
        $finish;
    end

    // Таймаут для предотвращения бесконечной симуляции
    initial begin
        #100000;  // 100,000 временных единиц (10,000 тактов)
        $display("Error: waiting time exceeded!");
        $finish;
    end

endmodule